{"version":3,"sources":["context.js","components/contact/001contact.js","components/contact/003contatcts.js","components/layout/textInputGroup.js","components/contact/addContact.js","components/contact/EditContact.js","components/layout/002header.js","components/pages/About.js","components/pages/NotFound.js","components/test/Test.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","contacts","filter","contact","id","payload","map","Provider","dispatch","setState","axios","get","res","this","data","value","props","children","Component","Consumer","Contact","showContactInfo","onShowClick","onDeleteClick","a","delete","name","email","phone","className","onClick","style","cursor","float","color","bind","Link","to","marginRight","Contacts","Fragment","key","TextInputGroup","label","placeholder","onChange","error","htmlFor","classnames","defaultProps","AddContact","errors","onSubmit","arg","preventDefault","newContact","post","history","push","target","EditContact","updContact","match","params","put","Header","title","href","Test","body","console","log","fetch","then","response","json","App","Switch","Route","exact","path","component","About","NotFound","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c995f2a3.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\n\nconst Context = React.createContext();\n\nconst reducer = (state, action) => {\n    switch(action.type)\n    {\n        case 'DELETE_CONTACT':\n            return{\n                ...state,\n                contacts: state.contacts.filter(contact => contact.id !== action.payload)\n            };\n        case 'ADD_CONTACT':\n            return{\n                ...state,\n                contacts: [action.payload, ...state.contacts]\n            }\n        case 'UPDATE_CONTACT':\n            return{\n                ...state,\n                contacts: state.contacts.map(contact => contact.id === action.payload.id ? (contact = action.payload) : contact)\n            }\n        default:\n            return state;\n    }\n}\n\nexport class Provider extends Component {\n    state = {\n        contacts : [\n          \n        ],\n        dispatch: action => this.setState(state => reducer(state, action))\n    };\n\n    async componentDidMount() {\n        const res = await axios.get('https://jsonplaceholder.typicode.com/users');\n        this.setState({contacts: res.data});\n    }\n\n    render() {\n        return (\n            <Context.Provider value={this.state}>\n                {this.props.children}\n            </Context.Provider>\n        )\n    }\n}\n\nexport const Consumer = Context.Consumer;","import React, {Component} from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\n\nimport { Consumer } from '../../context';\n\nclass Contact extends Component {\n    state= {\n        showContactInfo: false\n    };\n\n    onShowClick = (id) => { // arrow function is required \n        this.setState({showContactInfo:!this.state.showContactInfo}); //toggling display\n    }\n\n    onDeleteClick = async(id, dispatch) => {\n        try{\n            await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\n            dispatch({ type: 'DELETE_CONTACT', payload: id});\n            //we are not getting anything back....so no await variable\n        }\n        catch(e) {\n            dispatch({ type: 'DELETE_CONTACT', payload: id});\n        } //coz this is fake API...\n    }\n\n    render() {\n        const { id, name, email, phone } = this.props.contact; //passed from contatcs \n        const {showContactInfo } = this.state;\n    return (\n\n        <Consumer>\n            { value => {\n                const { dispatch } = value;\n                return(\n                    <div className=\"card card-body mb-3\">\n                \n                    <h4> \n                        {name} \n                        \n                        <i onClick={this.onShowClick} className=\"fas fa-sort-down\"\n                        style={{cursor: 'pointer'}}/> \n                        \n                        <i className=\"fas fa-times\" style={{ cursor: 'pointer', float: 'right', color: 'red'}} onClick={this.onDeleteClick.bind(this, id, dispatch)}/>\n\n                        <Link to={`contact/edit/${id}`}>\n                            <i className=\"fas fa-pencil-alt\" style={{ cursor: 'pointer', float:'right', color:'black', marginRight:'1rem'}} />\n                        </Link>\n                    </h4>\n                \n                    {showContactInfo ? ( //toggling display on condition\n                        <ul className=\"list-group\">\n                            <li className=\"list-group-item\">Email: {email} </li>\n                            <li className=\"list-group-item\">Phone : {phone} </li>\n                        </ul>\n                    ) : null }\n\n                    </div>  \n                )\n            } }\n        </Consumer>\n\n            \n        );\n    }\n  }\n\nContact.propTypes = {\n    contact: PropTypes.object.isRequired\n};\n  \nexport default Contact;","import React, { Component } from 'react';\nimport Contact from './001contact';\nimport { Consumer } from '../../context';\n\nclass Contacts extends Component {\n\n    render() {\n        return (\n            <Consumer>\n                {value => {\n                    const { contacts } = value;\n                    return (\n                        <React.Fragment>\n                            <h1 className=\"display-4 mb-2\"> \n                                <span className=\"text-danger\"> Contact </span>\n                                List\n                            </h1>\n                            { contacts.map( contact => (\n                                <Contact \n                                key={contact.id}\n                                contact={contact}\n                                />\n                            ))}\n                        </React.Fragment>\n                    )\n                }}\n            </Consumer>\n        )\n    }\n}\n\nexport default Contacts;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nconst TextInputGroup = ({\n        label,\n        name,\n        value,\n        placeholder,\n        type,\n        onChange,\n        error\n    }) => {\n    return (\n        <div className=\"form-group\">\n            <label htmlFor={name}> {label} </label>\n            <input \n                type={type}\n                name={name}\n                className={classnames('form-control form-control-lg', {'is-invalid': error})}\n                placeholder={placeholder}\n                value={value}\n                onChange={onChange}\n            />\n            {error && <div className=\"invalid-feedback\">{error}</div>}\n        </div>\n    )\n};\n\nTextInputGroup.propTypes = {\n    label:  PropTypes.string.isRequired,\n    name:   PropTypes.string.isRequired,\n    placeholder: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired,\n    type:   PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n    error: PropTypes.string\n};\n\nTextInputGroup.defaultProps = {\n    type: \"text\"\n};\n\nexport default TextInputGroup;","import React, { Component } from 'react';\nimport { Consumer } from '../../context';\nimport TextInputGroup from '../layout/textInputGroup';\nimport axios from 'axios';\n\nclass AddContact extends Component {\n\n    state = {\n        name : '',\n        email: '',\n        phone : '',\n        errors: {}\n    };\n\n    onSubmit = async(dispatch, arg) => {\n        arg.preventDefault();\n        const { name, email, phone } = this.state;\n\n        //check for errors\n        if(name === '') {\n            this.setState({errors: {name:'name is required'}});\n            return;\n        }\n\n        if(email === '') {\n            this.setState({errors: {email:'name is required'}});\n            return;\n        }\n\n        if(phone === '') {\n            this.setState({errors: {phone:'name is required'}});\n            return;\n        }\n\n        const newContact = {\n            name,\n            email,\n            phone\n        } //watch how we ignored name: name, email: email.... \n\n        const res = await axios.post('https://jsonplaceholder.typicode.com/users', newContact);\n        dispatch({type: 'ADD_CONTACT', payload: res.data})\n\n        this.setState({\n            name: '',\n            email: '',\n            phone: ''\n        });\n\n        this.props.history.push('/'); //navigating to home page\n    };\n\n    onChange = (arg) => { this.setState({ [arg.target.name]: arg.target.value}); }\n    \n    render() {\n        const {name, email, phone, errors} = this.state;\n\n        return (\n            <Consumer>\n                {value => {\n                    const { dispatch } = value;\n                    return (\n                    <div className=\"card mb-3\">\n                        <div className=\"card-header\"> Add Contact </div>\n                        <div className=\"card-body\">\n                            <form onSubmit={this.onSubmit.bind(this,dispatch)}>\n                                <TextInputGroup \n                                    label=\"Name\"\n                                    name=\"name\"\n                                    placeholder=\"Enter Name...\"\n                                    value={name}\n                                    onChange={this.onChange}\n                                    error={errors.name}\n                                />\n\n                                <TextInputGroup \n                                    label=\"Email\"\n                                    name=\"email\"\n                                    type=\"email\"\n                                    placeholder=\"Enter Email...\"\n                                    value={email}\n                                    onChange={this.onChange}\n                                    error={errors.email}\n                                />\n\n                                <TextInputGroup \n                                    label=\"Phone\"\n                                    name=\"phone\"\n                                    placeholder=\"Enter Phone...\"\n                                    value={phone}\n                                    onChange={this.onChange}\n                                    error={errors.phone}\n                                />\n\n                                <input type=\"submit\" value=\"Add Contact\" className=\"btn btn-block btn-primary\"/>\n                            </form>\n                        </div>\n                    </div>                \n                    )\n                }}\n            </Consumer>\n        )\n    }\n}\n\nexport default AddContact;","import React, { Component } from 'react';\nimport { Consumer } from '../../context';\nimport TextInputGroup from '../layout/textInputGroup';\nimport axios from 'axios';\n\nclass EditContact extends Component {\n\n    state = {\n        name : '',\n        email: '',\n        phone : '',\n        errors: {}\n    };\n\n    async componentDidMount() {\n        const { id } = this.props.match.params;\n        const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\n        const contact = res.data;\n\n        this.setState({\n            name: contact.name,\n            email: contact.email,\n            phone: contact.phone\n        })\n    }\n\n    onSubmit = async(dispatch, arg) => {\n        arg.preventDefault();\n        const { name, email, phone } = this.state;\n\n        //check for errors\n        if(name === '') {\n            this.setState({errors: {name:'name is required'}});\n            return;\n        }\n\n        if(email === '') {\n            this.setState({errors: {email:'name is required'}});\n            return;\n        }\n\n        if(phone === '') {\n            this.setState({errors: {phone:'name is required'}});\n            return;\n        }\n\n        //for updating contact..\n        const updContact = {\n            name,\n            email,\n            phone\n        } // es6 like name = this.name  .....\n\n        //get id from url\n        const { id } = this.props.match.params;\n\n        const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, updContact);\n        dispatch({type:'UPDATE_CONTACT', payload: res.data});\n\n        //for clearing placeholders\n        this.setState({\n            name: '',\n            email: '',\n            phone: ''\n        });\n\n        this.props.history.push('/'); //navigating to home page\n    };\n\n    onChange = (arg) => { this.setState({ [arg.target.name]: arg.target.value}); }\n    \n    render() {\n        const {name, email, phone, errors} = this.state;\n\n        return (\n            <Consumer>\n                {value => {\n                    const { dispatch } = value;\n                    return (\n                    <div className=\"card mb-3\">\n                        <div className=\"card-header\"> Edit Contact </div>\n                        <div className=\"card-body\">\n                            <form onSubmit={this.onSubmit.bind(this,dispatch)}>\n                                <TextInputGroup \n                                    label=\"Name\"\n                                    name=\"name\"\n                                    placeholder=\"Enter Name...\"\n                                    value={name}\n                                    onChange={this.onChange}\n                                    error={errors.name}\n                                />\n\n                                <TextInputGroup \n                                    label=\"Email\"\n                                    name=\"email\"\n                                    type=\"email\"\n                                    placeholder=\"Enter Email...\"\n                                    value={email}\n                                    onChange={this.onChange}\n                                    error={errors.email}\n                                />\n\n                                <TextInputGroup \n                                    label=\"Phone\"\n                                    name=\"phone\"\n                                    placeholder=\"Enter Phone...\"\n                                    value={phone}\n                                    onChange={this.onChange}\n                                    error={errors.phone}\n                                />\n\n                                <input type=\"submit\" value=\"Update Contact\" className=\"btn btn-block btn-primary\"/>\n                            </form>\n                        </div>\n                    </div>                \n                    )\n                }}\n            </Consumer>\n        )\n    }\n}\n\nexport default EditContact;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Link} from 'react-router-dom';\n\n\nconst Header = (props) => {\n    const {title} = props;\n    return (\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\n            <div className=\"container\">\n                <a href=\"/\" className=\"navbar-brand\"> {title}</a>\n                <div>\n                    <ul className=\"navbar-nav mr-auto\">\n                        <li className=\"nav-item\">\n                            <Link to=\"/\" className=\"nav-link\">\n                                <i className=\"fas fa-home\"/>\n                                 Home\n                            </Link>\n                        </li>\n                        <li className=\"nav-item\">\n                            <Link to=\"/contact/add\" className=\"nav-link\">\n                                <i className=\"fas fa-plus\"/>\n                                 Add\n                            </Link>\n                        </li>\n                        <li className=\"nav-item\">\n                            <Link to=\"/about\" className=\"nav-link\">\n                                <i className=\"fas fa-question\"/>\n                                 About\n                            </Link>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n        </nav>\n    );\n};\n\nHeader.defaultProps = {\n    title : '!My App'\n};\n\nHeader.propTypes = {\n    title: PropTypes.string.isRequired\n};\n\nexport default Header;","import React from 'react';\n\nexport default (props) => {\n    return (\n        <div>\n            <h1 className=\"display-4\">\n            About contact Manage & displaying id parameter\n            </h1>\n\n            <h1 className=\"display-4\">\n                {props.match.params.id /*this is something you bring value from urlbar*/}\n            </h1>\n\n            <p className=\"lead\"> Simple app to manage contacts </p>\n\n            <p className=\"text-secondary\"> Version 1.0.0</p>\n        </div>\n    )\n}","import React from 'react';\n\nexport default () => {\n    return(\n        <div>\n            <h1 className=\"display-4\">\n                <span className=\"text-danger\"> 404 </span> Page Not found\n            </h1>\n            <p className=\"lead\">\n                Sorry , that page not exist\n            </p>\n        </div>\n    )\n}","import React, { Component } from 'react';\n\nclass Test extends Component {\n\n    state = {\n        title: '',\n        body:''\n    };\n\n    componentDidMount() {\n        console.log('fetching....');\n        fetch('https://jsonplaceholder.typicode.com/posts/1')\n            .then(response => response.json())\n            .then(data => {\n                console.log(data);\n                this.setState({\n                title: data.title,\n                body: data.body\n                })    \n            }\n        );\n    }\n\n    // componentWillMount() {\n    //     console.log(\"component is goint to be mounted....\");\n    //     //this fires Before this compinent is mounted...\n    // }\n\n    // componentDidUpdate() {\n    //     //if state is changed in that component\n    // }\n\n    // componentWillUpdate() {\n    //     //this is before the state is updated..\n    // }\n\n    // componentWillReceiveProps(nextProps, nextState) {\n    //     //when the component receivbes new proporties...\n    //     //deprecated\n    // }\n\n    // static getDerivedStateFromProps(nextProps, nextState) {\n    //     return {\n    //         test: 'something'\n    //     };\n    // }\n\n    // static getSnapShotBeforeUpdate(nextProps, nextState) {\n    //     //\n    // }\n\n    render() {\n        const { title, body } = this.state;\n        return(\n            <div>\n                <h1> {title} </h1>\n                <p> {body} </p>\n            </div>\n        )\n    }\n}\n\nexport default Test;","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch} from 'react-router-dom';\nimport Contacts from './components/contact/003contatcts';\nimport AddContact from './components/contact/addContact';\nimport EditContact from './components/contact/EditContact';\nimport Header from './components/layout/002header';\nimport About from './components/pages/About';\nimport NotFound from './components/pages/NotFound';\nimport Test from './components/test/Test';\n\nimport { Provider } from './context';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n\n      <Provider>\n        <Router>\n          <div className=\"App\"> \n            <Header title=\"Contact Manager\"/>\n            <div className=\"container\">\n              <Switch>\n                <Route exact path =\"/\" component={Contacts} />\n                <Route exact path =\"/contact/add\" component={AddContact} />\n                <Route exact path =\"/contact/edit/:id\" component={EditContact} />\n                <Route exact path =\"/about/:id\" component={About} />\n                <Route exact path =\"/test\" component={Test} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  } \n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}